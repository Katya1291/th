# Инструкция по работе с Git и удаленными репозиториями 

## Git это -
Git - это одна из реализаций распределенных систем контроля версий, имеющие как  локальные , так и удаленные репозитории . Является самой популярной реадизацией систем контроля версий в мире.
## Подготовка репозитория 
Для создания репозитория необходимо выполнить команду *git init* в папке с репозиторием и у вас создасться репозиторий ,появится скрытая папка Git.

## Создание коммитов 

### Git add
Для добавления изменений в коммит используется команда *Git add* . Чтобы использовать команду *git add* напишите *git add <название файла>*

### Просмотр состояния репозитория 
Для того, чтобы просмотреть состояние репозитория испозьзуется команда *git status*. Для этого необходимо  в папке с репозиторием написать  *git status*, и вы увидите были ли изменения в файлах. или их не было.

### Создание коммитов 
Для того чтобы создать коммит необходимо выполнить команду *git commit*. выполняется она так : git commit -m 'название коммита'.

### Просмотр коммитов 
Для просмотра коммитов используется команда *git lod*, в нем содержится вся информация о каждои отдельном созданом коммите 

### изменение commit
Если вам понадобится переделать commit и внести туда новый комментарий нужно написать туда новую команду *git commit -- amend -m 'новый комментарий'*

#### Создание удаленного репозитория
Удалленый репозиторий - это репозиторий хранящийся ы облаке , на стороннем сервисе , специально созданном для работы с git имеющий ряд приемуществ . Во первых это своего рода резервная копия вашего проекта .

#### Клонирование , и что это
клонирование это когда вы копируете удаленный репозиторий к себе на ПК. Чтобы склонировать проект нужно узнать где он расположен и скопировать на него ссылку , для этого пишем *git clohe 'ссылка'*

#### Подключение к удаленному репозиторию
Чтобы подключится к удаленному репозиторию , не забывайте что для этого нужно обязательно изменить URI на свой . Для подключения введите команду 'git remote add origin <ссылка>'. Проект может иметь несколько репозиториев одновременно .чтобы их различать дадим им разные имена.

#### ОТправка изменений на сервер 
чтобы отправить изменения на сервре в нашем репозитории . КОманда предназначенная для этого *push*. Она принимает два парамента имя удаленного репозитория и ветку , в которую необходимо внести изменения .

#### Запрос изменений с  сервера
Если вы сделали изменения в вашем удаленном рипозитории , другие пользователи могут скачать измененяи при помощи команды *git pull original master*

#### Удаление локального репозитория 
Удалить локальный репозитория можно через командную строку, для этого нужно ввести *rm repository-part/rm -r .git *

##### СОздание новых веток
Чтобы создать ветку нужно ввести команду *git branch <название ветки>*

##### Переключение между ветками 
Для того чтобы переключится на любую ветку нужно использовать команду *git checkout <название ветки>*

##### Слияние веток 
Чтобы обьединить несколько веток ,применения изменений из ветки <название ветки> к основной версии проекта ,для этого пишем 'git merge <название ветки>',после того как она стала актуальна старая больше не нужна и ее можно удалить 

##### Удаление ветки 
для удаление ветки нужно ввести команду *git branch -d <название ветки>*